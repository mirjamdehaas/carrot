<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="sad5" id="10" localization="8" tooltip="" x="139" y="136">
                            <bitmap>media/images/box/box-timeLine.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="123">
                                <ActuatorList model="nao">
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-68.15" />
                                        <Key frame="81" value="-67.8548" />
                                        <Key frame="99" value="-67.8548" />
                                        <Key frame="123" value="-68.1185" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="4.29809" />
                                        <Key frame="81" value="4.22121" />
                                        <Key frame="99" value="4.22121" />
                                        <Key frame="123" value="4.22121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="-37.9668" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="-70.4037" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="0" mute="0" unit="1">
                                        <Key frame="44" value="0.0184" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-40.0762" />
                                        <Key frame="81" value="-53.1721" />
                                        <Key frame="99" value="-53.1721" />
                                        <Key frame="123" value="-40.0762" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-4.74374" />
                                        <Key frame="81" value="-6.06212" />
                                        <Key frame="99" value="-6.06212" />
                                        <Key frame="123" value="-4.83163" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-14.3239" />
                                        <Key frame="81" value="-14.1482" />
                                        <Key frame="99" value="-14.1482" />
                                        <Key frame="123" value="-14.1482" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="121.04" />
                                        <Key frame="81" value="121.025" />
                                        <Key frame="99" value="121.025" />
                                        <Key frame="123" value="121.025" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="86.6588" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="12.654" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="7.11683" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-67.97" />
                                        <Key frame="81" value="-67.2348" />
                                        <Key frame="99" value="-67.2348" />
                                        <Key frame="123" value="-67.97" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-4.34702" />
                                        <Key frame="81" value="-4.48007" />
                                        <Key frame="99" value="-4.48007" />
                                        <Key frame="123" value="-4.48007" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="33.4013" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="78.9244" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="0" mute="0" unit="1">
                                        <Key frame="44" value="0.0112" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-40.1689" />
                                        <Key frame="81" value="-53.6164" />
                                        <Key frame="99" value="-53.6164" />
                                        <Key frame="123" value="-39.9931" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="4.66066" />
                                        <Key frame="81" value="5.97904" />
                                        <Key frame="99" value="5.97904" />
                                        <Key frame="123" value="4.92435" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-14.3239" />
                                        <Key frame="81" value="-14.1482" />
                                        <Key frame="99" value="-14.1482" />
                                        <Key frame="123" value="-14.1482" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="121.04" />
                                        <Key frame="81" value="121.04" />
                                        <Key frame="99" value="121.04" />
                                        <Key frame="123" value="121.04" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="84.73" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="-10.5494" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="44" value="8.69887" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="-1.9" />
                                        <Key frame="45" value="-1.76024" />
                                        <Key frame="83" value="14.3239" />
                                        <Key frame="101" value="14.3239" />
                                        <Key frame="122" value="-0.1" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="43" value="43.1" />
                                        <Key frame="45" value="42.4493" />
                                        <Key frame="83" value="7.02893" />
                                        <Key frame="101" value="7.02893" />
                                        <Key frame="122" value="49.7" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Set Stiffness" id="1" localization="8" tooltip="Stiffen the motors selected in parameters." x="313" y="11">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            self.motion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            self.motion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            self.motion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            self.motion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            self.motion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                            <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                            <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                            <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                            <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                            <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                            <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                            <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                        </Box>
                        <Box name="test" id="12" localization="8" tooltip="" x="352" y="272">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import random
import sys
import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        proxy = ALProxy("ALLeds")
        color1 = "blue"
        color2 = "blue"
        color3 = "white"
        #You can select from these choices : "blue", "green", "yellow", "white", "cyan", "magenta", "red"

        duration = 0.1
        #duration is still not used in this version. Might edit soon

        i = 0 #do not edit this

#########################################################################################################################

    #Eyes sections, chest and foot LEDs changes colors simultaneously from color1 to color2

#        names1 = ["FaceLed0", "FaceLed2", "FaceLed4", "FaceLed6", "ChestLeds", "FeetLeds"]
#        names2 = ["FaceLed1", "FaceLed3", "FaceLed5", "FaceLed7"]
#        proxy.createGroup("pair",names1)
#        proxy.createGroup("impair",names2)

        while(i <= 60):
#            proxy.fadeRGB("pair",color1,0.0), proxy.fadeRGB("impair",color2,0.0)
#            time.sleep(0.1)
#            proxy.fadeRGB("impair",color1,0.0), proxy.fadeRGB("pair",color2,0.0)
            time.sleep(0.1)
           # proxy.off("FaceLeds")
            proxy.setIntensity("FaceLeds", 0.1)
            i = i + 1
            continue
        proxy.setIntensity("FaceLeds", 0.9)




#########################################################################################################################

    #Eyes sections, chest and foot LEDs changes colors simultaneously with brief pause from color1 to color2

#        names1 = ["FaceLed0", "FaceLed2", "FaceLed4", "FaceLed6", "ChestLeds", "FeetLeds"]
#        names2 = ["FaceLed1", "FaceLed3", "FaceLed5", "FaceLed7"]
#        proxy.createGroup("pair",names1)
#        proxy.createGroup("impair",names2)

#       while(i <= 25):
#            proxy.fadeRGB("pair",color1,0.1), proxy.fadeRGB("impair",color2,0.1)
#            time.sleep(0.1)
#            proxy.fadeRGB("impair",color1,0.1), proxy.fadeRGB("pair",color2,0.1)
#            time.sleep(0.1)

#            i = i + 1
#            continue


#########################################################################################################################

    #Can't define, but looks cool, so I'll let this one here

#        names1 = ["FaceLed0", "FaceLed2", "FaceLed4", "FaceLed6", "ChestLeds", "FeetLeds"]
#        names2 = ["FaceLed1", "FaceLed3", "FaceLed5", "FaceLed7"]
#        proxy.createGroup("pair",names1)
#        proxy.createGroup("impair",names2)

#       while(i <= 25):
#            proxy.fadeRGB("pair",color1,0.1)
#            proxy.fadeRGB("impair",color2,0.1)
#            proxy.fadeRGB("pair",color2,0.1)
#            proxy.fadeRGB("impair",color1,0.1)

#            i = i + 1
#            continue

#########################################################################################################################

    #Change Eyes sections, chest and foot LEDs color clockwise (or anti-clockwise) from color1 to color2

#        names1 = ["FaceLed0", "FaceLed2", "FaceLed4", "FaceLed6", "ChestLeds", "FeetLeds"]
#        names2 = ["FaceLed1", "FaceLed3", "FaceLed5", "FaceLed7"]
#        proxy.createGroup("pair",names1)
#        proxy.createGroup("impair",names2)
#        proxy.fadeRGB("pair",color1,0.0), proxy.fadeRGB("impair",color2,0.0)

#        while(i <= 5):
#            proxy.fadeRGB("FaceLed0",color2,0.1)
#            proxy.fadeRGB("FaceLed1",color1,0.1)
#            proxy.fadeRGB("FaceLed2",color2,0.1)
#            proxy.fadeRGB("FaceLed3",color1,0.1)
#            proxy.fadeRGB("FaceLed4",color2,0.1)
#            proxy.fadeRGB("FaceLed5",color1,0.1)
#            proxy.fadeRGB("FaceLed6",color2,0.1)
#            proxy.fadeRGB("FaceLed7",color1,0.1)
#            proxy.fadeRGB("FeetLeds",color2,0.1)
#            proxy.fadeRGB("ChestLeds",color2,0.1)

#            proxy.fadeRGB("FaceLed0",color1,0.1)
#            proxy.fadeRGB("FaceLed1",color2,0.1)
#            proxy.fadeRGB("FaceLed2",color1,0.1)
#            proxy.fadeRGB("FaceLed3",color2,0.1)
#            proxy.fadeRGB("FaceLed4",color1,0.1)
#            proxy.fadeRGB("FaceLed5",color2,0.1)
#            proxy.fadeRGB("FaceLed6",color1,0.1)
#            proxy.fadeRGB("FaceLed7",color2,0.1)
#            proxy.fadeRGB("FeetLeds",color1,0.1)
#            proxy.fadeRGB("ChestLeds",color1,0.1)

#            i = i + 1
#            continue
#        self.onStopped()

#########################################################################################################################

    #Randomly changes all LEDs color from cyan to color1 to color2 and color3
#        while(i <= 5):
#            proxy.fadeRGB("AllLeds",color1,0.2)
#            proxy.fadeRGB("AllLeds",color2,0.2)
#            proxy.fadeRGB("AllLeds",color3,0.2)
#            i = i + 1
#            continue


######################################################################################

    #(Eyes LEDs and Chest LED randomly change color from yellow, red and green)

        #proxy.rasta(5)

######################################################################################

    #(Randomly changes colors from lots of color)

        #proxy.randomEyes(5)

######################################################################################

        pass

#################################################################

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="10" indexofinput="2" outputowner="1" indexofoutput="3" />
                        <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" />
                        <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="3" />
                        <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
