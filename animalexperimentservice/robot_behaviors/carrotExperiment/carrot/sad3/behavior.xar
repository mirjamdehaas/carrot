<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="sad3" id="14" localization="8" tooltip="" x="385" y="142">
                            <bitmap>media/images/box/box-timeLine.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="136">
                                <ActuatorList model="nao">
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-67.9427" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="4.39699" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-60.8187" />
                                        <Key frame="94" value="-60.2913" />
                                        <Key frame="136" value="-60.2913" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-46.6729" />
                                        <Key frame="94" value="-46.8487" />
                                        <Key frame="136" value="-46.8487" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="0" mute="0" unit="1">
                                        <Key frame="42" value="0.0104001" />
                                        <Key frame="94" value="0.0236" />
                                        <Key frame="136" value="0.0236" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-39.8125" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-4.39218" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-14.1482" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="121.04" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="81.5611" />
                                        <Key frame="94" value="82.1764" />
                                        <Key frame="136" value="82.1764" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="10.1051" />
                                        <Key frame="94" value="9.84147" />
                                        <Key frame="136" value="9.84147" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="7.3805" />
                                        <Key frame="94" value="6.32579" />
                                        <Key frame="136" value="6.32579" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-67.85" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-4.12851" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="59.9446" />
                                        <Key frame="94" value="12.3073" />
                                        <Key frame="136" value="59.0656" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="46.756" />
                                        <Key frame="94" value="34.6269" />
                                        <Key frame="136" value="46.756" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="0" mute="0" unit="1">
                                        <Key frame="42" value="0.00839996" />
                                        <Key frame="94" value="0.0204" />
                                        <Key frame="136" value="0.0204" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-40.2568" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="4.48488" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-14.1482" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="120.941" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="81.8296" />
                                        <Key frame="94" value="50.8917" />
                                        <Key frame="136" value="81.2144" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-10.11" />
                                        <Key frame="94" value="17.8396" />
                                        <Key frame="136" value="-9.40682" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="-7.38531" />
                                        <Key frame="94" value="-104.5" />
                                        <Key frame="136" value="-8.08845" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="4.83163" />
                                        <Key frame="133" value="1.4" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                        <Key frame="42" value="0.524941" />
                                        <Key frame="133" value="46.4" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Motor On/Off" id="1" localization="8" tooltip="Stiffen or loosen all motors." x="207" y="126">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("Body", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" />
                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" />
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4">
                                <Choice value="Off" />
                                <Choice value="On" />
                            </Parameter>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Box name="test (1)" id="2" localization="8" tooltip="" x="224" y="381">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import random
import sys
import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        proxy = ALProxy("ALLeds")
        color1 = "blue"
        color2 = "blue"
        color3 = "white"
        #You can select from these choices : "blue", "green", "yellow", "white", "cyan", "magenta", "red"

        duration = 0.1
        #duration is still not used in this version. Might edit soon

        i = 0 #do not edit this

#########################################################################################################################

    #Eyes sections, chest and foot LEDs changes colors simultaneously from color1 to color2

#        names1 = ["FaceLed0", "FaceLed2", "FaceLed4", "FaceLed6", "ChestLeds", "FeetLeds"]
#        names2 = ["FaceLed1", "FaceLed3", "FaceLed5", "FaceLed7"]
#        proxy.createGroup("pair",names1)
#        proxy.createGroup("impair",names2)

        while(i <= 60):
#            proxy.fadeRGB("pair",color1,0.0), proxy.fadeRGB("impair",color2,0.0)
#            time.sleep(0.1)
#            proxy.fadeRGB("impair",color1,0.0), proxy.fadeRGB("pair",color2,0.0)
            time.sleep(0.1)
           # proxy.off("FaceLeds")
            proxy.setIntensity("FaceLeds", 0.1)
            i = i + 1
            continue
        proxy.setIntensity("FaceLeds", 0.9)




#########################################################################################################################

    #Eyes sections, chest and foot LEDs changes colors simultaneously with brief pause from color1 to color2

#        names1 = ["FaceLed0", "FaceLed2", "FaceLed4", "FaceLed6", "ChestLeds", "FeetLeds"]
#        names2 = ["FaceLed1", "FaceLed3", "FaceLed5", "FaceLed7"]
#        proxy.createGroup("pair",names1)
#        proxy.createGroup("impair",names2)

#       while(i <= 25):
#            proxy.fadeRGB("pair",color1,0.1), proxy.fadeRGB("impair",color2,0.1)
#            time.sleep(0.1)
#            proxy.fadeRGB("impair",color1,0.1), proxy.fadeRGB("pair",color2,0.1)
#            time.sleep(0.1)

#            i = i + 1
#            continue


#########################################################################################################################

    #Can't define, but looks cool, so I'll let this one here

#        names1 = ["FaceLed0", "FaceLed2", "FaceLed4", "FaceLed6", "ChestLeds", "FeetLeds"]
#        names2 = ["FaceLed1", "FaceLed3", "FaceLed5", "FaceLed7"]
#        proxy.createGroup("pair",names1)
#        proxy.createGroup("impair",names2)

#       while(i <= 25):
#            proxy.fadeRGB("pair",color1,0.1)
#            proxy.fadeRGB("impair",color2,0.1)
#            proxy.fadeRGB("pair",color2,0.1)
#            proxy.fadeRGB("impair",color1,0.1)

#            i = i + 1
#            continue

#########################################################################################################################

    #Change Eyes sections, chest and foot LEDs color clockwise (or anti-clockwise) from color1 to color2

#        names1 = ["FaceLed0", "FaceLed2", "FaceLed4", "FaceLed6", "ChestLeds", "FeetLeds"]
#        names2 = ["FaceLed1", "FaceLed3", "FaceLed5", "FaceLed7"]
#        proxy.createGroup("pair",names1)
#        proxy.createGroup("impair",names2)
#        proxy.fadeRGB("pair",color1,0.0), proxy.fadeRGB("impair",color2,0.0)

#        while(i <= 5):
#            proxy.fadeRGB("FaceLed0",color2,0.1)
#            proxy.fadeRGB("FaceLed1",color1,0.1)
#            proxy.fadeRGB("FaceLed2",color2,0.1)
#            proxy.fadeRGB("FaceLed3",color1,0.1)
#            proxy.fadeRGB("FaceLed4",color2,0.1)
#            proxy.fadeRGB("FaceLed5",color1,0.1)
#            proxy.fadeRGB("FaceLed6",color2,0.1)
#            proxy.fadeRGB("FaceLed7",color1,0.1)
#            proxy.fadeRGB("FeetLeds",color2,0.1)
#            proxy.fadeRGB("ChestLeds",color2,0.1)

#            proxy.fadeRGB("FaceLed0",color1,0.1)
#            proxy.fadeRGB("FaceLed1",color2,0.1)
#            proxy.fadeRGB("FaceLed2",color1,0.1)
#            proxy.fadeRGB("FaceLed3",color2,0.1)
#            proxy.fadeRGB("FaceLed4",color1,0.1)
#            proxy.fadeRGB("FaceLed5",color2,0.1)
#            proxy.fadeRGB("FaceLed6",color1,0.1)
#            proxy.fadeRGB("FaceLed7",color2,0.1)
#            proxy.fadeRGB("FeetLeds",color1,0.1)
#            proxy.fadeRGB("ChestLeds",color1,0.1)

#            i = i + 1
#            continue
#        self.onStopped()

#########################################################################################################################

    #Randomly changes all LEDs color from cyan to color1 to color2 and color3
#        while(i <= 5):
#            proxy.fadeRGB("AllLeds",color1,0.2)
#            proxy.fadeRGB("AllLeds",color2,0.2)
#            proxy.fadeRGB("AllLeds",color3,0.2)
#            i = i + 1
#            continue


######################################################################################

    #(Eyes LEDs and Chest LED randomly change color from yellow, red and green)

        #proxy.rasta(5)

######################################################################################

    #(Randomly changes colors from lots of color)

        #proxy.randomEyes(5)

######################################################################################

        pass

#################################################################

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="0" indexofinput="4" outputowner="14" indexofoutput="4" />
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="14" indexofinput="2" outputowner="1" indexofoutput="3" />
                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
